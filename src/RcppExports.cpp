// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// cpp_grad_posterior_density
arma::vec cpp_grad_posterior_density(const arma::vec& THETAi, const arma::vec& Yi, const arma::vec& MUi, const arma::mat& invS, const arma::vec& TAU, const arma::mat& LAMBDA, const int J, const int K);
RcppExport SEXP _credicpp_cpp_grad_posterior_density(SEXP THETAiSEXP, SEXP YiSEXP, SEXP MUiSEXP, SEXP invSSEXP, SEXP TAUSEXP, SEXP LAMBDASEXP, SEXP JSEXP, SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type THETAi(THETAiSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Yi(YiSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type MUi(MUiSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type invS(invSSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type TAU(TAUSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type LAMBDA(LAMBDASEXP);
    Rcpp::traits::input_parameter< const int >::type J(JSEXP);
    Rcpp::traits::input_parameter< const int >::type K(KSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_grad_posterior_density(THETAi, Yi, MUi, invS, TAU, LAMBDA, J, K));
    return rcpp_result_gen;
END_RCPP
}
// cpp_posterior_density
double cpp_posterior_density(const arma::vec& THETAi, const arma::vec& Yi, const arma::vec& MUi, const arma::mat& invS, const arma::vec& TAU, const arma::mat& LAMBDA, const int J, const int K);
RcppExport SEXP _credicpp_cpp_posterior_density(SEXP THETAiSEXP, SEXP YiSEXP, SEXP MUiSEXP, SEXP invSSEXP, SEXP TAUSEXP, SEXP LAMBDASEXP, SEXP JSEXP, SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type THETAi(THETAiSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Yi(YiSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type MUi(MUiSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type invS(invSSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type TAU(TAUSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type LAMBDA(LAMBDASEXP);
    Rcpp::traits::input_parameter< const int >::type J(JSEXP);
    Rcpp::traits::input_parameter< const int >::type K(KSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_posterior_density(THETAi, Yi, MUi, invS, TAU, LAMBDA, J, K));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_credicpp_cpp_grad_posterior_density", (DL_FUNC) &_credicpp_cpp_grad_posterior_density, 8},
    {"_credicpp_cpp_posterior_density", (DL_FUNC) &_credicpp_cpp_posterior_density, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_credicpp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
